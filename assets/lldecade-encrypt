#!/usr/bin/env perl

use strict;
use warnings;
use 5.10.0;
use IO::File;
use String::Random qw(random_regex random_string);
use Getopt::Long qw(GetOptions);

GetOptions(
    'perl!' => \my $perl,
) or die $!;

my $file = shift || die "Usage: lldecade-encrypt <file>\n";

my $MAP = {
    '00' => 'rand_mac',
    '01' => 'rand_ipv4',
    '10' => 'rand_ipv6',
    '11' => 'rand_etc',
};

main: {
    my $fh = IO::File->new;
    $fh->open($file => 'r') or die "$file: $!";
    if ($perl) {
        say '#!/usr/bin/env perl';
        say 'use Acme::Crypt::LLDecade;';
    }
    while (defined (my $c = $fh->getc)) {
        my $num2 = unpack 'B8' => $c;
        while ($num2 =~ s/(\d{2})//) {
            say main->can($MAP->{$1})->();
        }
    }
    exit;
}

sub rand_mac {
    my @octet;
    for (1..6) {
        push @octet, random_regex '[0-9a-fA-F][0-9a-fA-F]';
    }
    join(((rand 2) > 1 ? '-' : ':'), @octet);
}

sub rand_ipv4 {
    my @ips;
    for (1..4) {
        push @ips, int rand(256);
    }
    join '.', @ips;
}

sub rand_ipv6 {
    my @ips;
    for (1..8) {
        my $tmp;
        for my $x (1..4) {
            if ($x == 1) {
                $tmp .= random_regex '[1-9A-F]';
            }
            else {
                $tmp .= random_regex '[0-9A-F]';
            }
        }
        push @ips, $tmp;
    }
    join ':', @ips;
}

sub rand_etc {
    random_regex('[0-9a-fA-F]').random_string '.' x (int rand 20);
}

__END__
